{"version":3,"sources":["services/personservice.js","Components/AllPeople.js","Components/Search.js","Components/Form.js","Components/Notification.js","App.js","index.js"],"names":["baseURL","axios","get","newObj","post","id","delete","People","newPeople","setMessage","map","x","name","number","onClick","window","confirm","personService","then","setTimeout","Filtering","search","persons","regex","RegExp","length","filter","person","match","Form","addPerson","newName","newNumber","onChangeHandler","onNumberChangeHandler","onSubmit","value","onChange","type","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setSearch","useEffect","data","event","khoj","target","console","log","userExists","some","el","preventDefault","newPerson","concat","error","alert","naam","numb","location","reload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dd2aa76.chunk.js","sourcesContent":["// import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst baseURL = \"api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseURL);\r\n};\r\n\r\nconst create = (newObj) => {\r\n  return axios.post(baseURL, newObj);\r\n};\r\n\r\nconst update = (id, newObj) => {\r\n  return axios.put(baseURL + \"/\" + id, newObj);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(baseURL + \"/\" + id);\r\n};\r\n\r\nexport default { getAll, create, update, deletePerson };\r\n","import React from \"react\";\r\nimport personService from \"../services/personservice\";\r\n\r\nconst People = ({ newPeople, setMessage }) => {\r\n  const deleteHandler = (id, name) => {\r\n    // console.log(`name`, name);\r\n    let decision = window.confirm(`Do you really want to delete ${name}`);\r\n    if (decision) {\r\n      personService.deletePerson(id).then((x) => {\r\n        setMessage(`${name} was successfully deleted`);\r\n        setTimeout(() => setMessage(null), 5000);\r\n      });\r\n    }\r\n  };\r\n  return newPeople.map((x) => (\r\n    <li key={x.id}>\r\n      {x.name} {x.number} <button onClick={() => deleteHandler(x.id, x.name)}> Delete </button>\r\n    </li>\r\n  ));\r\n};\r\n\r\nexport default People;\r\n","import React from \"react\";\r\nimport People from \"./AllPeople\";\r\n\r\nconst Filtering = ({ search, persons, setMessage }) => {\r\n  let newPeople = [];\r\n  const regex = new RegExp(search, \"gi\");\r\n\r\n  if (search.length === 0) {\r\n    newPeople = persons;\r\n  } else {\r\n    newPeople = persons.filter((person) => person.name.match(regex) !== null);\r\n  }\r\n\r\n  return <People newPeople={newPeople} setMessage={setMessage} />;\r\n};\r\n\r\nexport default Filtering;\r\n","import React from \"react\";\r\n\r\nconst Form = ({ addPerson, newName, newNumber, onChangeHandler, onNumberChangeHandler }) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={onChangeHandler} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={onNumberChangeHandler} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div className=\"notification\">\r\n        <h1> {message}</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","\"use strict\";\nimport React, { useState, useEffect } from \"react\";\nimport Filtering from \"./Components/Search\";\nimport Form from \"./Components/Form\";\nimport personService from \"./services/personservice\";\nimport Notification from \"./Components/Notification\";\nimport \"./index.css\";\n// import axios from \"axios\";\n\nconst App = () => {\n  let [persons, setPersons] = useState([]);\n  let [newName, setNewName] = useState(\"\");\n  let [newNumber, setNewNumber] = useState(\"\");\n  let [search, setSearch] = useState(\"\");\n  let [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((x) => {\n      setPersons(x.data);\n    });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    // console.log(\"button clicked\", event.target);\n    function userExists(name) {\n      return persons.some(function (el) {\n        return el.name === name;\n      });\n    }\n\n    if (userExists(newName) === false) {\n      let newPerson = { name: newName, number: newNumber };\n      personService\n        .create(newPerson)\n        .then((x) => setPersons(persons.concat(x)))\n        .then((error) => {\n          setMessage(` ${newPerson.name} was successfully added to the server`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n      newName = \"\";\n      newNumber = \"\";\n    } else if (userExists(newName) === true) {\n      alert(newName + \" is already added to phonebook\");\n    }\n  };\n\n  const onChangeHandler = (event) => {\n    let naam = event.target.value;\n    // console.log(naam);\n    setNewName(naam);\n  };\n\n  const onNumberChangeHandler = (event) => {\n    let numb = event.target.value;\n    // console.log(`numb`, numb);\n    setNewNumber(numb);\n  };\n\n  const searchHandler = (event) => {\n    let khoj = event.target.value;\n    // console.log(khoj);\n    setSearch(khoj);\n    console.log(search);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <div>\n        filter shown with: <input value={search} onChange={searchHandler} />\n      </div>\n      <h2>Add a new</h2>\n      <Form\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        onChangeHandler={onChangeHandler}\n        onNumberChangeHandler={onNumberChangeHandler}\n      />\n      <button\n        onClick={() => {\n          window.location.reload();\n        }}\n      >\n        Refresh\n      </button>\n      <h2>Numbers</h2>\n      <div>\n        <ol>\n          <Filtering search={search} persons={persons} setMessage={setMessage} />\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport axios from \"axios\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}